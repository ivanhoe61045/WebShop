@model Business.Module.BusinessEntyties.Product

@{
    ViewBag.Title = "GetCategoriesByProduct";
}

<h2>GetCategoriesByProduct</h2>
<label class="alert-danger">@ViewBag.ErrorMessage</label>
<label class="alert-success">@ViewBag.Message</label>
<div>
    <h4>Product</h4>
    <hr />
    <div class="form">
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model.IdProduct)</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@Html.DisplayFor(model => model.IdProduct)">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model.ProducName)</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@Html.DisplayNameFor(model => model.ProducName)">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model.Title)</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@Html.DisplayFor(model => model.Title)">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model.Price)</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@Html.DisplayFor(model => model.Price)">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model.Description)</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@Html.DisplayFor(model => model.Description)">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model.Image)</label>
            <div class="col-sm-10">
                <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@Html.DisplayFor(model => model.Image)">
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model.Image)</label>
            <div class="col-sm-10">
                <img src="@Html.DisplayFor(model => model.Image)" class="image-preview" alt="@Html.DisplayNameFor(model => model.ProducName)" />
            </div>
        </div>
        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

    </div>

    <div class="form-group">
        <div class="col-md-10">
            <label class="control-label col-md-2">Categories</label>
            @if (Model != null)
            {
                for (var i = 0; i < Model.ListCategories.Count(); i++)
                {
                    var category = Model.ListCategories[i];
                    @Html.HiddenFor(model => model.ListCategories[i].IdCategory)
                    @Html.HiddenFor(model => model.ListCategories[i].CategoryName)
                    @Html.DisplayFor(model => model.ListCategories[i].CatergoryState)
                    @Html.LabelFor(model => model.ListCategories[i].CategoryName, category.CategoryName)
                }
            }
        </div>
    </div>

</div>

